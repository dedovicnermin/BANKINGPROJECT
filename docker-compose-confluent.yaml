version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  connect:
    image: custom-confluent-image
    build: .
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    volumes:
      - ./bin/connect-plugins:/shared-folder
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181

  control-center:
    image: confluentinc/cp-enterprise-control-center
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  rest:
    image: rest:latest
    container_name: rest
    build:
      context: rest
      dockerfile: Dockerfile
    links:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - ROUTER-ENDPOINT=router-streams:7082
    ports:
      - "8080:8080"
    depends_on:
      - kafka


  transformer-streams:
    image: transformer-streams:latest
    container_name: transformer-streams
    build:
      context: transformer-streams
      dockerfile: Dockerfile
    links:
      - kafka
    ports:
      - "7081:7081"
    depends_on:
      - kafka
      - rest
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092


  router-streams:
    image: router-streams:latest
    container_name: router-streams
    ports:
      - "7082:7082"
    build:
      context: router-streams
      dockerfile: Dockerfile
    depends_on:
      - rest
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SERVER_PORT=7082





  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BANK
    ports:
    - 5432:5432
    volumes:
      - ./bin/bank/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./bin/bank/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /var/lib/postgresql/data


  persistence:
    image: persistence:latest
    container_name: persistence
    build:
      context: persistence
      dockerfile: Dockerfile
    ports:
      - "7083:7083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/BANK
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SERVER_PORT=7083
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    depends_on:
      - db
      - kafka


  dbTwo:
    image: postgres
    container_name: dbTwo
    ports:
      - "5442:5442"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BANK2
    volumes:
      - ./bin/bank2/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./bin/bank2/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /var/lib/postgresql/dataTwo


  persistence2:
    image: persistence:latest
    container_name: persistence2
    environment:
      - SPRING_PROFILES_ACTIVE=persistence2
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbTwo:5432/BANK2
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    ports:
      - "8084:8084"
    build:
      context: persistence
      dockerfile: Dockerfile
    depends_on:
      - dbTwo