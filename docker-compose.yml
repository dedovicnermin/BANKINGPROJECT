version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"





  kafka:
    container_name: kafka_broker_1
    image: wurstmeister/kafka
    links:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOSTNAME: kafka
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock%


  kafka2:
    container_name: kafka_broker_2
    image: wurstmeister/kafka
    links:
      - zookeeper
    ports:
      - "9093:9093"
      - "29093:29093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOSTNAME: kafka2
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:29093,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29093,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock%


  kafka3:
    container_name: kafka_broker_3
    image: wurstmeister/kafka
    links:
      - zookeeper
    ports:
      - "9094:9094"
      - "29094:29094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOSTNAME: kafka3
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:29094,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29094,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock%





  rest:
    image: rest:latest
    container_name: rest
    build:
      context: rest
      dockerfile: Dockerfile
    links:
      - kafka
      - kafka2
      - kafka3
      - router-streams
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092,kafka2:29093,kafka3:29094
      - ROUTER-ENDPOINT=router-streams:8082
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - kafka2
      - kafka3







  transformer-streams:
    image: transformer-streams:latest
    container_name: transformer-streams
    build:
      context: transformer-streams
      dockerfile: Dockerfile
    links:
      - kafka
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - kafka2
      - kafka3
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092,kafka2:29093,kafka3:29094





  router-streams:
    image: router-streams:latest
    container_name: router-streams
    build:
      context: router-streams
      dockerfile: Dockerfile
    links:
      - kafka
      - kafka2
      - kafka3
    ports:
      - "8082:8082"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092,kafka2:29093,kafka3:29094
    depends_on:
      - kafka
      - kafka2
      - kafka3





  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BANK
    volumes:
      - ./bin/bank/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./bin/bank/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /var/lib/postgresql/data





  persistence:
    image: persistence:latest
    container_name: persistence
    build:
      context: persistence
      dockerfile: Dockerfile
    links:
      - kafka
      - kafka2
      - kafka3
      - db
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/BANK
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092,kafka2:29093,kafka3:29094
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - db




  dbTwo:
    image: postgres
    container_name: dbTwo
    ports:
      - "5442:5442"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BANK2
    volumes:
      - ./bin/bank2/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./bin/bank2/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /var/lib/postgresql/dataTwo



  persistence2:
    image: persistence:latest
    container_name: persistence2
    links:
      - dbTwo
      - kafka
      - kafka2
      - kafka3
    environment:
      - SPRING_PROFILES_ACTIVE=persistence2
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbTwo:5432/BANK2
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092,kafka2:29093,kafka3:29094
    build:
      context: persistence
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - dbTwo

